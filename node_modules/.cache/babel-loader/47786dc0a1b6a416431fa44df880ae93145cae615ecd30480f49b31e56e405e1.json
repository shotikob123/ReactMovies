{"ast":null,"code":"var _jsxFileName = \"/Users/giorgininidze/Documents/React Projects/dota2-info/src/App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport AppRouter from './Router';\nimport { ThemeProvider } from 'styled-components';\nimport { GlobalStyles, lightTheme, darkTheme } from './styles/globalStyles';\nimport { useDarkMode } from './hooks/useDarkMode';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [theme, themeToggler] = useDarkMode();\n  const themeMode = theme === 'light' ? lightTheme : darkTheme;\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: themeMode,\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AppRouter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: themeToggler,\n        style: {\n          position: 'fixed',\n          bottom: '10px',\n          right: '10px'\n        },\n        children: [\"Switch to \", theme === 'light' ? 'Dark' : 'Light', \" Theme\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"saMS7KGgBxrQmVrCefyFfk5oLwk=\", false, function () {\n  return [useDarkMode];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","AppRouter","ThemeProvider","GlobalStyles","lightTheme","darkTheme","useDarkMode","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","theme","themeToggler","themeMode","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","position","bottom","right","_c","$RefreshReg$"],"sources":["/Users/giorgininidze/Documents/React Projects/dota2-info/src/App.js"],"sourcesContent":["import React from 'react';\nimport AppRouter from './Router';\nimport { ThemeProvider } from 'styled-components';\nimport { GlobalStyles, lightTheme, darkTheme } from './styles/globalStyles';\nimport { useDarkMode } from './hooks/useDarkMode';\n\nconst App = () => {\n  const [theme, themeToggler] = useDarkMode();\n\n  const themeMode = theme === 'light' ? lightTheme : darkTheme;\n\n  return (\n    <ThemeProvider theme={themeMode}>\n      <>\n        <GlobalStyles />\n        <AppRouter />\n        <button onClick={themeToggler} style={{ position: 'fixed', bottom: '10px', right: '10px' }}>\n          Switch to {theme === 'light' ? 'Dark' : 'Light'} Theme\n        </button>\n      </>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,UAAU;AAChC,SAASC,aAAa,QAAQ,mBAAmB;AACjD,SAASC,YAAY,EAAEC,UAAU,EAAEC,SAAS,QAAQ,uBAAuB;AAC3E,SAASC,WAAW,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,YAAY,CAAC,GAAGR,WAAW,CAAC,CAAC;EAE3C,MAAMS,SAAS,GAAGF,KAAK,KAAK,OAAO,GAAGT,UAAU,GAAGC,SAAS;EAE5D,oBACEG,OAAA,CAACN,aAAa;IAACW,KAAK,EAAEE,SAAU;IAAAC,QAAA,eAC9BR,OAAA,CAAAE,SAAA;MAAAM,QAAA,gBACER,OAAA,CAACL,YAAY;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChBZ,OAAA,CAACP,SAAS;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACbZ,OAAA;QAAQa,OAAO,EAAEP,YAAa;QAACQ,KAAK,EAAE;UAAEC,QAAQ,EAAE,OAAO;UAAEC,MAAM,EAAE,MAAM;UAAEC,KAAK,EAAE;QAAO,CAAE;QAAAT,QAAA,GAAC,YAChF,EAACH,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,EAAC,QAClD;MAAA;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEpB,CAAC;AAACR,EAAA,CAhBID,GAAG;EAAA,QACuBL,WAAW;AAAA;AAAAoB,EAAA,GADrCf,GAAG;AAkBT,eAAeA,GAAG;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}